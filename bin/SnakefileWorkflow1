# Define the variable from the configuration file
configfile: "configuration_w1.yaml"
GROUPS =  ["life_expectancy", "gdp_per_capita", "median_age", "population_density"]

# Rule to specify the expected output files for the chosen variable
rule all:
    input:
        '../data/owid-covid-data_processed.csv',
        expand('../data/owid-covid-data_processed_{group}.csv', group=GROUPS),
        expand('../results/mannwhitneyu_{group}.txt', group=GROUPS),
        expand('../results/plot_{group}.png', group=GROUPS)

rule clean:
    shell: 'rm -f ../results/*.png ../results/*.txt'

rule dataprocessing:
    input:
        cmd='dataprocessing.py',
        csv='../data/owid-covid-data.csv'
    output: '../data/owid-covid-data_processed.csv'
    shell: 'python {input.cmd} -i {input.csv} -o {output}'

rule dataprocessingw1:
    input:
        cmd='dataprocessing_w1.py',
        csv='../data/owid-covid-data_processed.csv'
    output: '../data/owid-covid-data_processed_{group}.csv'
    params:
        continent = config['continent'],
        year = config['year'],
    shell: 'python {input.cmd} -i {input.csv} -c "{wildcards.group}" -o {output} -y {params.year} --continent "{params.continent}"'

rule mannwhitneyu:
    input:
        cmd='mann_whitney_u.py',
        csv='../data/owid-covid-data_processed_{group}.csv'
    output: '../results/mannwhitneyu_{group}.txt'
    shell: 'python {input.cmd} {input.csv} -c "{wildcards.group}_cat" -o {output}'

rule plot:
    input:
        mannwhitneyu_test = '../results/mannwhitneyu_{group}.txt',
        csv='../data/owid-covid-data_processed_{group}.csv'
    output:
        plot = '../results/plot_{group}.png'
    params:
        x = config['x'],
        y = config['y']
    run:
        with open(input.mannwhitneyu_test, 'r') as f:
            result = f.read().strip()
        if result == 'True':
            shell('python box_plot_w1.py {input.csv} -g "{wildcards.group}_cat" -x "{params.x}" -y "{params.y}" -o {output.plot}')
        else:
            shell('python line_plot_w1.py {input.csv} -g "{wildcards.group}_cat" -x "{params.x}" -y "{params.y}" -o {output.plot}')
